FROM --platform=i386 i386/debian:bookworm

# Set non-interactive frontend for apt
ARG DEBIAN_FRONTEND=noninteractive

# Install essential build dependencies
RUN apt-get upgrade && apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    gcc-multilib \
    libc6-dev \
    python3.11 \
    python3-pip \
    pipx

# Install Rust using rustup
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y

# Update PATH to include Rust binaries
ENV PATH="/root/.cargo/bin:${PATH}"

# Add the i386 target to Rust
RUN rustup target add i686-unknown-linux-gnu

# Configure Cargo to use gcc for i386 linking using Heredoc
RUN mkdir -p /root/.cargo && \
    tee /root/.cargo/config.toml > /dev/null <<EOF
[target.i686-unknown-linux-gnu]
linker = "gcc -m32"
EOF

# Set environment variable for Cargo build target
ENV CARGO_BUILD_TARGET=i686-unknown-linux-gnu

# Install runtime dependencies and additional packages
RUN apt-get upgrade && apt-get install -y --no-install-recommends \
    git \
    vim \
    unzip \
    ruby \
    nodejs \
    fakeroot \
    dbus \
    whiptail \
    hexedit \
    patch \
    wamerican \
    ucf \
    manpages \
    file \
    luajit \
    make \
    dialog \
    less \
    cowsay \
    netcat-openbsd \
    pipx \
    universal-ctags \
    sudo \
    gfortran \
    pkg-config \
    libopenblas-dev \
    liblapack-dev \
    libjpeg-dev \
    libpng-dev \
    zlib1g-dev \
    libtiff-dev \
    libfreetype6-dev \
    libportaudio2 \
    pandoc \
    cmake \
    wget \
    python3-dev
    


# Upgrade pip, setuptools, and wheel
RUN pip3 install --upgrade pip setuptools wheel --break-system-packages

# Install tiktoken and other Python dependencies
RUN pip3 install tiktoken==0.5.1 aider-chat --break-system-packages

# Copy installed Python packages from builder
# COPY /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages

# Create a non-root user with sudo privileges.
RUN useradd -m user && echo "user:password" | chpasswd && \
    echo "user ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Copy example files to the user's home directory
COPY --chown=user:user ./examples /home/user/examples

# Make all scripts in the lua directory executable
RUN chmod -R +x /home/user/examples/lua

# Set the working directory
WORKDIR /home/user/

# Set environment variables
ENV HOME="/home/user" \
    TERM="xterm" \
    USER="user" \
    SHELL="/bin/bash" \
    EDITOR="vim" \
    LANG="en_US.UTF-8" \
    LC_ALL="C"

# Set root password
RUN echo 'root:password' | chpasswd

# Create /app directory
RUN mkdir /app

# Install aider-chat (already installed in builder, this might be redundant)
RUN pip3 install aider-chat --break-system-packages

# Clone the GitHub repository into the 'template' directory
RUN git clone https://github.com/Nyttja-Labs/Template-server-experiment.git template


# RUN wget -qO- https://aider.chat/install.sh | sh

# Switch to the non-root user for subsequent operations
USER user

# Default command
CMD [ "/bin/bash" ]